Interger / Float division
Simply use 2 dashes in order to get the integer part leaving the remainder after doing some lots calculation
In python power like 2 power 5 is written with double hesterics **

Modulus
To get the reamainder in a division use modulus

Strings
Use either single or double quotes

Printing
Use the print() function
//You can use a slash in order to ignore the meaning of a sign
E.g
print('John\'s milk "I am in need"')

Raw String
Put r before a string means it is a raw string you are basically telling Python not to convert it.
print(r'John's milk "I am in need"')

If you type name = "Youtube" , then you get name[0:4]
Interpretation
Youtube
0123456
It will give you...Yout

If you type name[1:4] it will give you out

If i specify only name[1:] it will start at 1 and then go all the way to the end.
If i specify only name[:4] it will get all the characters that come before 4

String in python are immutable meaning once they have already been initalized they cannot be replced
There is a fuction called len() for python strings that gives the number of characters in the string



PYTHON LISTS
nums = [2,4,4,4,5]
Python List append()        Add a single element to the end of the list
Python List extend()        Add Elements of a List to Another Lis
Python List insert()        Inserts Element to The Lis
Python List remove()        Removes item from the lis
Python List index()         returns smallest index of element in lis
Python List count()         returns occurrences of element in a lis
Python List pop()           Removes element at the given inde
Python List reverse()       Reverses a Lis
Python List sort()          sorts elements of a lis
Python List copy()          Returns Shallow Copy of a Lis
Python List clear()         Removes all Items from the Lis
Python any() function       Checks if any Element of an Iterable is Tru
Python all()                returns true when all elements in iterable is tru
Python ascii()              Returns String Containing Printable Representatio
Python bool()               Converts a Value to Boolea
Python enumerate()          Returns an Enumerate Objec
Python filter()             constructs iterator from elements which are tru
Python iter()               returns an iterato
Python list()               creates a list in Pytho
Python len()                Returns Length of an Objec
Python max()                returns the largest ite
Python min()                returns the smallest valu
Python map()                Applies Function and Returns a Lis
Python reversed()           returns the reversed iterator of a sequenc
Python slice()              returns a slice objec
Python sorted() function    returns a sorted list from the given iterabl
Python sum()                Adds items of an Iterabl
Python zip()                Returns an iterator of tuple


TUPLES IN PYTHON
They are almost like Lists, the difference is that unlike lists tuples are immutable meaning you cannot change a value
tup = (4, 5, 6)
Iteration is faster in tuple than i nlist

Python Tuple count()      returns occurrences of element in a tuple
Python Tuple index()      returns smallest index of element in tupl
Python any() function     Checks if any Element of an Iterable is Tru
Python all()              returns true when all elements in iterable is tru
Python ascii()            Returns String Containing Printable Representatio
Python bool()             Converts a Value to Boolea
Python enumerate()        Returns an Enumerate Objec
Python filter()           constructs iterator from elements which are tru
Python iter()             returns an iterato
Python len()              Returns Length of an Objec
Python max()              returns the largest ite
Python min()              returns the smallest valu
Python map()              Applies Function and Returns a Lis
Python reversed()         returns the reversed iterator of a sequenc
Python slice()            returns a slice objec
sorted()                  function returns a sorted list from the given iterabl
Python sum()               Adds items of an Iterabl
Python tuple()            Returns a tupl
Python zip()               Returns an iterator of tuple



PYTHON SETS
Is a collection of elements which is a collection of unique elements
When you print a set it won't follow the same sequence in which you entered them
Therefore indexing is not support
We can use pop and remove functions in this language
s = {4, 5, 6

Methods in Sets
Python Set remove()            Removes Element from the Set
Python Set add()               adds element to a set
Python Set copy()              Returns Shallow Copy of a Set
Python Set clear()             remove all elements from a set
Python Set difference()        Returns Difference of Two Sets
difference_update()            Updates Calling Set With Intersection of Sets
Python Set discard()           Removes an Element from The Set
Python Set intersection()      Returns Intersection of Two or More Sets
intersection_update()          Updates Calling Set With Intersection of Sets
Python Set isdisjoint()        Checks Disjoint Sets
Python Set issubset()          Checks if a Set is Subset of Another Set
Python Set issuperset()        Checks if a Set is Superset of Another Set
Python Set pop()               Removes an Arbitrary Element
symmetric_difference()         Rturns the symmetric difference of sets
symmetric_difference_update()  Updates the Set with symmetric difference
Python Set union()             Returns the union of sets
Python Set update()            Add elements to the set
Python any() function          Checks if any Element of an Iterable is True
Python all()                   returns true when all elements in iterable is true
Python ascii()                 Returns String Containing Printable Representation
Python bool()                  Converts a Value to Boolean
Python enumerate()             Returns an Enumerate Object
Python filter()                constructs iterator from elements which are true
Python frozenset()             returns immutable frozenset object
Python iter()                  returns an iterator
Python len()                   Rturns Length of an Object
Python max()                   returns the largest item
Python min()                   returns the smallest value
Python map()                   Applies Function and Returns a List
Python set()                   Constructs and returns a set
Python sorted() function       returns a sorted list from the given iterable
Python sum()                   Adds items of an Iterable
Python zip()                   Returns an iterator of tuples




PYTHON DICTIONARIES
These get keys and the values for them and they are pretty immutable and they have the result
All keys here have to be unique
Key can have numbers or strings
data = {1 : 'John', 2 : 'paita'}



Function in dictionaris
copy()	     Copy the entire dictionary to new dictionary	dict.copy()
update()	 Update a dictionary by adding a new entry or a key-value pair to an
existing     entry or by deleting an existing entry.	Dict.update([other])
items() 	 Returns a list of tuple pairs (Keys, Value) in the dictionary.	dictionary.items()
sort()	     You can sort the elements	dictionary.sort()
len()	     Gives the number of pairs in the dictionary.	len(dict)
cmp()	     Compare values and keys of two dictionaries	cmp(dict1, dict2)
Str()	     Make a dictionary into a printable string format	Str(dict)
keys()       Returns all the keys in the dictionary

//You can use get method to get the item and if you dont that item in the index, it will print "Not found"
data.get(1, "Not found")

//You can also create a dictionary of l ists or sets, a dictionary will c reate a combinationof key and value of the 2 lits

PYTHON DATA TYPES

1. None = A python equivallent of Null
2. Numeric = Float 2.5, int 5, complex  a = b + bj E.g c = 6 + 9j, bool true or false
Convert float to int, just pass int(float) and vice verser
Python Strings and Char are the same
3. Sequence (list, tuples, dictionaries etc)
List lst = [], Set s = {}, t = (), String str = "" eg name = "John " or name = 'John'
//THis one is unique for Python
range(0, 10) //Let us convert it to a list then print it
list(range(10))

BITWISE OPERATORS
Complement Operator (~)

USER INPUT IN PYTHON
To get use input in python, we have the input function
Input will always return values of type String

agrv
Gets and stores a number of values
elif stands for else if in python

PYTHON INDENTATION
To remain in the same line while printing, use end = "" since python doesn't have println()

PYTHON PATTERN

# # # #
# # # #
# # # #
# # # #

for i in range (4):
   for i in range(4)
        print("# ", end = "")
         print()

PYTHON FUNCTIONS
To declare a function use the keyword def

def greet():
    print("Hallo there")

# def greet():
#     print("Hello")
#     print("Good Morning")
#
# greet()


# def greet():
#     print("Hello")
#     print("Good Morning")
#
# def add(x,y):
#     c = x+y
#     return c
#
# greet()
# result = add(5,4)
# print(result)



def add_sub(x,y):
    c = x+y
    d = x-y
    return c,d

result1,result2 = add_sub(5,4)
print(result1, result2)

PYTHON CLASSES AND OBJECTS

//Declare a class
class Computer:
    def config(self):
        print ("You are a good boy")

Computer.config(LearnPython)

An object has attributes and a behaviour, and by attribute we mean variables


CONCATENATION
In Python, concatenation is done with a , especially when variables are directly involved